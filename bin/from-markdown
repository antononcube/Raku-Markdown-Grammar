#!/usr/bin/env raku
use v6.d;

use Markdown::Grammar;
use Markdown::Actions::Mathematica;
use Markdown::Actions::Pod6;

#-----------------------------------------------------------
my $pCOMMAND = Markdown::Grammar;

sub md-subparse(Str:D $command, Str:D :$rule = 'TOP') {
    $pCOMMAND.subparse($command, :$rule);
}

sub md-parse(Str:D $command, Str:D :$rule = 'TOP') {
    $pCOMMAND.parse($command, :$rule);
}

sub md-interpret(Str:D $command,
                 Str:D:$rule = 'TOP',
                 :$actions = Markdown::Actions::Mathematica.new) {
    $pCOMMAND.parse($command, :$rule, :$actions).made;
}

#-----------------------------------------------------------

#| Converts Markdown files into Mathematica notebooks.
sub MAIN(Str $file where *.IO.f,       #= Input file.
         Str :t(:$to) = 'mathematica', #= Format to convert to. (One of 'mathematica' or 'pod6'.)
         Str :o(:$output) = '',        #= Output file; if an empty string then the result is printed to stdout.
         ) {

    my $text = slurp($file);

    my $res;
    given $to.lc {
        when  $_ ∈ <mathematica wl> { $res = md-interpret($text, actions => Markdown::Actions::Mathematica.new); }
        when  $_ ∈ <pod pod6>       { $res = md-interpret($text, actions => Markdown::Actions::Pod6.new); }
        default {
            die 'Unknown output format.'
        }
    }

    if $output.chars > 0 {
        spurt($output, $res);
    } else {
        say $res;
    }
}